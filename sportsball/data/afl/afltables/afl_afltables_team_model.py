"""AFL AFLTables team model."""

# pylint: disable=too-many-arguments,too-many-locals,duplicate-code,line-too-long
import datetime
import os
import urllib.parse
from urllib.parse import urlparse

import pytest_is_running
import requests_cache
from bs4 import BeautifulSoup

from ....cache import MEMORY
from ...google.google_news_model import create_google_news_models
from ...league import League
from ...team_model import VERSION, TeamModel
from ...x.x_social_model import create_x_social_model
from .afl_afltables_coach_model import create_afl_afltables_coach_model
from .afl_afltables_player_model import create_afl_afltables_player_model

_TEAM_NAME_MAP = {
    "Melbourne": ["ME"],
    "Geelong": ["GE"],
    "Fitzroy": ["FI"],
    "Collingwood": ["CW"],
    "Essendon": ["ES"],
    "South Melbourne": ["SM"],
    "St Kilda": ["SK"],
    "Carlton": ["CA"],
    "Sydney": ["SM", "SY"],
    "University": ["UN"],
    "Richmond": ["RI"],
    "North Melbourne": ["NM"],
    "Western Bulldogs": ["WB", "FO"],
    "Hawthorn": ["HW"],
    "Brisbane Bears": ["BB"],
    "West Coast": ["WC"],
    "Adelaide": ["AD"],
    "Fremantle": ["FR"],
    "Brisbane Lions": ["BL"],
    "Port Adelaide": ["PA"],
    "Gold Coast": ["GC"],
    "Greater Western Sydney": ["GW"],
}


def _create_afl_afltables_team_model(
    team_url: str,
    players: list[
        tuple[
            str,
            str,
            int | None,
            str,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            float | None,
        ]
    ],
    points: float,
    session: requests_cache.CachedSession,
    last_ladder_ranks: dict[str, int] | None,
    dt: datetime.datetime,
    league: League,
    version: str,
) -> TeamModel:
    response = session.get(team_url)
    soup = BeautifulSoup(response.text, "lxml")
    o = urlparse(team_url)
    last_component = o.path.split("/")[-1]
    identifier, _ = os.path.splitext(last_component)
    h1 = soup.find("h1")
    if h1 is None:
        raise ValueError("h1 is null.")
    name = h1.get_text()
    last_ladder_rank = None
    if last_ladder_ranks is not None and last_ladder_ranks:
        short_names = _TEAM_NAME_MAP[name]
        for short_name in short_names:
            if short_name in last_ladder_ranks:
                last_ladder_rank = last_ladder_ranks[short_name]
                break
    coaches_url = None
    for a in soup.find_all("a", href=True):
        a_text = a.get_text()
        if a_text == "Coaches":
            coaches_url = urllib.parse.urljoin(team_url, a.get("href"))
            break
    if coaches_url is None:
        raise ValueError("coaches_url is null")

    coach_model = create_afl_afltables_coach_model(
        url=coaches_url, session=session, year=dt.year, dt=dt
    )

    return TeamModel(
        identifier=identifier,
        name=name,
        players=[  # pyright: ignore
            create_afl_afltables_player_model(
                player_url=player_url,
                jersey=jersey,
                kicks=kicks,
                session=session,
                name=name,
                marks=marks,
                handballs=handballs,
                disposals=disposals,
                goals=goals,
                behinds=behinds,
                hit_outs=hit_outs,
                tackles=tackles,
                rebounds=rebounds,
                insides=insides,
                clearances=clearances,
                clangers=clangers,
                free_kicks_for=free_kicks_for,
                free_kicks_against=free_kicks_against,
                brownlow_votes=brownlow_votes,
                contested_possessions=contested_possessions,
                uncontested_possessions=uncontested_possessions,
                contested_marks=contested_marks,
                marks_inside=marks_inside,
                one_percenters=one_percenters,
                bounces=bounces,
                goal_assists=goal_assists,
                percentage_played=percentage_played,
                dt=dt,
            )
            for player_url, jersey, kicks, name, marks, handballs, disposals, goals, behinds, hit_outs, tackles, rebounds, insides, clearances, clangers, free_kicks_for, free_kicks_against, brownlow_votes, contested_possessions, uncontested_possessions, contested_marks, marks_inside, one_percenters, bounces, goal_assists, percentage_played in players
        ],
        odds=[],
        points=points,
        ladder_rank=last_ladder_rank,
        location=None,
        news=create_google_news_models(name, session, dt, league),
        social=create_x_social_model(identifier, session, dt),
        field_goals=None,
        coaches=[coach_model] if coach_model is not None else [],
        lbw=None,
        end_dt=None,
        runs=None,
        wickets=None,
        overs=None,
        balls=None,
        byes=None,
        leg_byes=None,
        wides=None,
        no_balls=None,
        penalties=None,
        balls_per_over=None,
        fours=None,
        sixes=None,
        catches=None,
        catches_dropped=None,
        disposal_efficiency=None,
        uncontested_marks=None,
        total_possessions=None,
        tackles_inside_50=None,
        centre_clearances=None,
        stoppage_clearances=None,
        goal_accuracy=None,
        rushed_behinds=None,
        touched_behinds=None,
        left_behinds=None,
        left_posters=None,
        right_behinds=None,
        right_posters=None,
        total_interchange_count=None,
        interchange_count_q1=None,
        interchange_count_q2=None,
        interchange_count_q3=None,
        interchange_count_q4=None,
        game_winning_goals=None,
        headed_goals=None,
        inaccurate_crosses=None,
        inaccurate_long_balls=None,
        inaccurate_passes=None,
        inaccurate_through_balls=None,
        left_footed_shots=None,
        longball_percentage=None,
        offsides=None,
        penalty_kick_goals=None,
        penalty_kick_percentage=None,
        penalty_kick_shots=None,
        penalty_kicks_missed=None,
        possession_percentage=None,
        possession_time=None,
        right_footed_shots=None,
        shoot_out_goals=None,
        shoot_out_misses=None,
        shoot_out_percentage=None,
        shot_assists=None,
        shot_percentage=None,
        shots_headed=None,
        shots_off_target=None,
        shots_on_post=None,
        shots_on_target=None,
        through_ball_percentage=None,
        total_crosses=None,
        total_goals=None,
        total_long_balls=None,
        total_passes=None,
        total_shots=None,
        total_through_balls=None,
        draws=None,
        sub_outs=None,
        suspensions=None,
        time_ended=None,
        time_started=None,
        win_percentage=None,
        wins=None,
        won_corners=None,
        yellow_cards=None,
        clean_sheet=None,
        crosses_caught=None,
        goals_conceded=None,
        partial_clean_sheet=None,
        penalty_kick_conceded=None,
        penalty_kick_save_percentage=None,
        penalty_kicks_faced=None,
        penalty_kicks_saved=None,
        punches=None,
        saves=None,
        shoot_out_kicks_faced=None,
        shoot_out_kicks_saved=None,
        shoot_out_save_percentage=None,
        shots_faced=None,
        smothers=None,
        unclaimed_crosses=None,
        accurate_crosses=None,
        accurate_long_balls=None,
        accurate_passes=None,
        accurate_through_balls=None,
        cross_percentage=None,
        free_kick_goals=None,
        free_kick_percentage=None,
        free_kick_shots=None,
        game_winning_assists=None,
        blocked_shots=None,
        effective_clearances=None,
        effective_tackles=None,
        ineffective_tackles=None,
        interceptions=None,
        tackle_percentage=None,
        appearances=None,
        average_rating_from_correspondent=None,
        average_rating_from_data_feed=None,
        average_rating_from_editor=None,
        average_rating_from_user=None,
        did_not_play=None,
        fouls_committed=None,
        fouls_suffered=None,
        goal_difference=None,
        losses=None,
        lost_corners=None,
        minutes=None,
        own_goals=None,
        pass_percentage=None,
        red_cards=None,
        starts=None,
        sub_ins=None,
        pitch_count=None,
        strikes=None,
        strike_pitch_ratio=None,
        games_played=None,
        team_games_played=None,
        double_plays=None,
        opportunities=None,
        errors=None,
        passed_balls=None,
        outfield_assists=None,
        pickoffs=None,
        putouts=None,
        outs_on_field=None,
        triple_plays=None,
        balls_in_zone=None,
        extra_bases=None,
        outs_made=None,
        catcher_third_innings_played=None,
        catcher_caught_stealing=None,
        catcher_stolen_bases_allowed=None,
        catcher_earned_runs=None,
        is_qualified_catcher=None,
        is_qualified_pitcher=None,
        successful_chances=None,
        total_chances=None,
        full_innings_played=None,
        part_innings_played=None,
        fielding_percentage=None,
        range_factor=None,
        zone_rating=None,
        catcher_caught_stealing_percentage=None,
        catcher_era=None,
        def_warbr=None,
        perfect_games=None,
        wild_pitches=None,
        third_innings=None,
        team_earned_runs=None,
        shutouts=None,
        pickoff_attempts=None,
        run_support=None,
        pitches_as_starter=None,
        quality_starts=None,
        inherited_runners=None,
        inherited_runners_scored=None,
        opponent_total_bases=None,
        is_qualified_saves=None,
        full_innings=None,
        part_innings=None,
        blown_saves=None,
        innings=None,
        era=None,
        whip=None,
        caught_stealing_percentage=None,
        pitches_per_start=None,
        pitches_per_inning=None,
        run_support_average=None,
        opponent_average=None,
        opponent_slug_average=None,
        opponent_on_base_percentage=None,
        opponent_ops=None,
        save_percentage=None,
        strikeouts_per_nine_innings=None,
        strikeout_to_walk_ratio=None,
        tough_losses=None,
        cheap_wins=None,
        save_opportunities_per_win=None,
        runs_created=None,
        batting_average=None,
        pinch_average=None,
        slug_average=None,
        secondary_average=None,
        on_base_percentage=None,
        ops=None,
        ground_to_fly_ratio=None,
        runs_created_per_27_outs=None,
        batter_rating=None,
        at_bats_per_home_run=None,
        stolen_base_percentage=None,
        pitches_per_plate_appearance=None,
        isolated_power=None,
        walk_to_strikeout_ratio=None,
        walks_per_plate_appearance=None,
        secondary_average_minus_batting_average=None,
        runs_produced=None,
        runs_ratio=None,
        patience_ratio=None,
        balls_in_play_average=None,
        mlb_rating=None,
        offensive_wins_above_replacement=None,
        wins_above_replacement=None,
        earned_runs=None,
        batters_hit=None,
        sacrifice_bunts=None,
        save_opportunities=None,
        finishes=None,
        balks=None,
        batters_faced=None,
        holds=None,
        complete_games=None,
        hit_by_pitch=None,
        ground_balls=None,
        strikeouts=None,
        rbis=None,
        sac_hits=None,
        hits=None,
        stolen_bases=None,
        walks=None,
        catcher_interference=None,
        gidps=None,
        sacrifice_flies=None,
        at_bats=None,
        home_runs=None,
        grand_slam_home_runs=None,
        runners_left_on_base=None,
        triples=None,
        game_winning_rbis=None,
        intentional_walks=None,
        doubles=None,
        fly_balls=None,
        caught_stealing=None,
        pitches=None,
        games_started=None,
        pinch_at_bats=None,
        pinch_hits=None,
        player_rating=None,
        is_qualified=None,
        is_qualified_steals=None,
        total_bases=None,
        plate_appearances=None,
        projected_home_runs=None,
        extra_base_hits=None,
        average_game_score=None,
        version=version,
    )


@MEMORY.cache(ignore=["session"])
def _cached_create_afl_afltables_team_model(
    team_url: str,
    players: list[
        tuple[
            str,
            str,
            int | None,
            str,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            float | None,
        ]
    ],
    points: float,
    session: requests_cache.CachedSession,
    last_ladder_ranks: dict[str, int] | None,
    dt: datetime.datetime,
    league: League,
    version: str,
) -> TeamModel:
    return _create_afl_afltables_team_model(
        team_url=team_url,
        players=players,
        points=points,
        session=session,
        last_ladder_ranks=last_ladder_ranks,
        dt=dt,
        league=league,
        version=version,
    )


def create_afl_afltables_team_model(
    team_url: str,
    players: list[
        tuple[
            str,
            str,
            int | None,
            str,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            int | None,
            float | None,
        ]
    ],
    points: float,
    session: requests_cache.CachedSession,
    last_ladder_ranks: dict[str, int] | None,
    dt: datetime.datetime,
    league: League,
) -> TeamModel:
    """Create a team model from AFL Tables."""
    if not pytest_is_running.is_running():
        return _cached_create_afl_afltables_team_model(
            team_url=team_url,
            players=players,
            points=points,
            session=session,
            last_ladder_ranks=last_ladder_ranks,
            dt=dt,
            league=league,
            version=VERSION,
        )
    with session.cache_disabled():
        return _create_afl_afltables_team_model(
            team_url=team_url,
            players=players,
            points=points,
            session=session,
            last_ladder_ranks=last_ladder_ranks,
            dt=dt,
            league=league,
            version=VERSION,
        )
